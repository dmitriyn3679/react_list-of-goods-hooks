{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","reverse","setReverse","goods","isReversed","initialValues","sort","a","b","localeCompare","length","renderGoods","className","type","classNames","ALPHABET","onClick","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAML,IA2BaE,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EA/BY,SAClBA,EACAJ,EACAK,GAEA,IAAMC,EAAa,YAAOF,GAE1B,OAAQJ,GACN,IAAK,WACHM,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,MAEF,IAAK,SACHH,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW9C,OAJIN,GACFC,EAAcJ,UAGTI,EAOOM,CAAYhB,EAAiBI,EAAUE,GAOrD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaL,EAASqB,WAEtCC,QAAS,kBAAMhB,EAAYN,EAASqB,WANtC,iCAWA,wBACEF,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaL,EAASuB,SAEtCD,QAAS,kBAAMhB,EAAYN,EAASuB,SANtC,4BAWA,wBACEJ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAab,IAEjBe,QAAS,WACPd,GAAYD,IAPhB,sBAaEF,IAAaL,EAASI,MAAQG,IAC9B,wBACEY,KAAK,SACLD,UAAU,4BACVI,QA/CI,WACZhB,EAAYN,EAASI,MACrBI,GAAW,IA0CL,sBAUJ,6BACE,6BACGC,EAAMe,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC9GtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a2368ede.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nconst renderGoods = (\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) => {\n  const initialValues = [...goods];\n\n  switch (sortType) {\n    case 'alphabet':\n      initialValues.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case 'length':\n      initialValues.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    initialValues.reverse();\n  }\n\n  return initialValues;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reverse, setReverse] = useState(false);\n\n  const goods = renderGoods(goodsFromServer, sortType, reverse);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !reverse },\n          )}\n          onClick={() => {\n            setReverse(!reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}